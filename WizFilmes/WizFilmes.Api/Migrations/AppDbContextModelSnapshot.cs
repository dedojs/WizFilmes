// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WizFilmes.Infra.Data.Context;

#nullable disable

namespace WizFilmes.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WizFilmes.Domain.Models.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Character")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Character = "Indiana Jones",
                            Name = "Harison Ford"
                        },
                        new
                        {
                            Id = 2,
                            Character = "Maverick",
                            Name = "Tom Cruise"
                        },
                        new
                        {
                            Id = 3,
                            Character = " Capitão John H. Miller ",
                            Name = "Tom Hanks"
                        },
                        new
                        {
                            Id = 4,
                            Character = "Mulher Maravilha",
                            Name = "Gal Gadot"
                        },
                        new
                        {
                            Id = 5,
                            Character = "Lara Croft",
                            Name = "Angelina Jolie"
                        },
                        new
                        {
                            Id = 6,
                            Character = "Debbie Ocean",
                            Name = "Sandra Bullock"
                        });
                });

            modelBuilder.Entity("WizFilmes.Domain.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Aventura"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Terror"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ficção Científica"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ação"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Comédia"
                        });
                });

            modelBuilder.Entity("WizFilmes.Domain.Models.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Steven Spilberg"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Patty Jenkins"
                        });
                });

            modelBuilder.Entity("WizFilmes.Domain.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DirectorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DirectorId");

                    b.HasIndex("UserId");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Filme do Indiana",
                            DirectorId = 1,
                            Name = "Indiana Jones e a Caveira de Cristal",
                            Rating = 0.0,
                            Year = 1980
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Filme da Lara Croft",
                            DirectorId = 2,
                            Name = "Tomb Raider",
                            Rating = 0.0,
                            Year = 2000
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Filme da DC",
                            DirectorId = 2,
                            Name = "Mulher Maravilha",
                            Rating = 0.0,
                            Year = 2020
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "Filme do ET",
                            DirectorId = 1,
                            Name = "ET",
                            Rating = 0.0,
                            Year = 1980
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 4,
                            Description = "Filme do avião",
                            DirectorId = 1,
                            Name = "Maverick",
                            Rating = 0.0,
                            Year = 2023
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 5,
                            Description = "Filme dos Ocean",
                            DirectorId = 2,
                            Name = "Oito Mulheres e um segredo",
                            Rating = 0.0,
                            Year = 2018
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Description = "Filme do capiroto",
                            DirectorId = 1,
                            Name = "Exorcista",
                            Rating = 0.0,
                            Year = 1978
                        });
                });

            modelBuilder.Entity("WizFilmes.Domain.Models.FilmActor", b =>
                {
                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.HasKey("FilmId", "ActorId");

                    b.HasIndex("ActorId");

                    b.ToTable("FilmsActor");

                    b.HasData(
                        new
                        {
                            FilmId = 1,
                            ActorId = 1
                        },
                        new
                        {
                            FilmId = 2,
                            ActorId = 5
                        },
                        new
                        {
                            FilmId = 3,
                            ActorId = 4
                        },
                        new
                        {
                            FilmId = 4,
                            ActorId = 3
                        },
                        new
                        {
                            FilmId = 5,
                            ActorId = 2
                        },
                        new
                        {
                            FilmId = 6,
                            ActorId = 6
                        });
                });

            modelBuilder.Entity("WizFilmes.Domain.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Resenha sobre o filme Indiana Jones",
                            FilmId = 1,
                            Rating = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Resenha sobre o filme Tomb Rider",
                            FilmId = 2,
                            Rating = 4,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("WizFilmes.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReviewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "andre@gmail.com",
                            Name = "Andre",
                            Password = "123456",
                            ReviewId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "angelica@gmail.com",
                            Name = "Angélica",
                            Password = "123456",
                            ReviewId = 2
                        });
                });

            modelBuilder.Entity("WizFilmes.Domain.Models.Film", b =>
                {
                    b.HasOne("WizFilmes.Domain.Models.Category", "Category")
                        .WithMany("Films")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WizFilmes.Domain.Models.Director", "Director")
                        .WithMany("Films")
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WizFilmes.Domain.Models.User", null)
                        .WithMany("Films")
                        .HasForeignKey("UserId");

                    b.Navigation("Category");

                    b.Navigation("Director");
                });

            modelBuilder.Entity("WizFilmes.Domain.Models.FilmActor", b =>
                {
                    b.HasOne("WizFilmes.Domain.Models.Film", "Film")
                        .WithMany("Cast")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WizFilmes.Domain.Models.Actor", "Actor")
                        .WithMany("Films")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("WizFilmes.Domain.Models.Review", b =>
                {
                    b.HasOne("WizFilmes.Domain.Models.Film", "Film")
                        .WithMany("Reviews")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WizFilmes.Domain.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WizFilmes.Domain.Models.Actor", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("WizFilmes.Domain.Models.Category", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("WizFilmes.Domain.Models.Director", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("WizFilmes.Domain.Models.Film", b =>
                {
                    b.Navigation("Cast");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("WizFilmes.Domain.Models.User", b =>
                {
                    b.Navigation("Films");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
